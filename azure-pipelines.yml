# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

steps: 
- script: |
    echo FASE DE VERIFICACION DE CONTRIBUCION
    echo 1. Vamos a compilar la aplicacion
    echo Vamos a iniciar update
    sudo apt-get update    
    echo Vamos a instalar java
    sudo apt-get install openjdk-8-jdk
    java -version
    echo Vamos a descargar e instalar Scala
    wget www.scala-lang.org/files/archive/scala-2.12.10.deb
    sudo dpkg -i scala*.deb
    scala -version
    echo Vamos a descargar e instalar SBT
    echo "deb https://dl.bintray.com/sbt/debian/" | sudo tee -a /etc/apt/sources.list.d/sbt.list
    sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823
    sudo apt-get update
    sudo apt-get install sbt -y
    echo Vamos a instalar git
    sudo apt install git
    git -version
    echo Vamos a instalar Which para saber la ruta de nuestro ejecutable
    sudo apt install which
    echo Vamos a instalar YUm para la gestion de paquetes RPM
    sudo apt-get install -y yum-utils
    echo Vamos a instalar docker
    sudo apt-get install docker-ce docker-ce-cli containerd.io
    sudo docker run hello-world
    echo Vamos a instalar Alien para conversion de paquetes linux rpm
    sudo add-apt-repository universe
    sudo apt install alien
    echo Vamos a crear el build
    sudo sbt rpm:packageBin
    echo Vamos a ejecutar el test unitario
    sudo sbt test 

    echo SE COMPLETO LA COMPILACION DEL APK
  displayName: 'FASE DE VERIFICACION DE CONTRIBUCION'

#- script: |
#    echo FASE DE VERIFICACION DE PRUEBAS DE INTEGRACION
#    echo Vamos a ejecutar las pruebas de integracion
#    sudo systemctl start docker
#    sudo docker run -i -e POSTGRES_PASSWORD=gcs -e POSTGRES_USER=gcs -e POSTGRES_DB=gcs -p 127.0.0.1:5432:5432  postgres:9.5
#    echo Listando
#    ls
#    echo Cambiar directorio
#    cd gcs-it
#    echo Listando
#    ls
#    echo Ejecutamos Test 
#    sudo sbt test
#    echo Fin de la FASE DE VERIFICACION DE PRUEBAS DE INTEGRACION
        
#  displayName: 'FASE DE VERIFICACION DE PRUEBAS DE INTEGRACION'

- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: Azure Connection Service
    sourceFolder: '/home/vsts/work/1/s/gcs-app/target/rpm/RPMS/noarch'
    contents: 'gcs-app-2.8.x-1.noarch.rpm'
    targetFolder: '/home/azureuser'
    readyTimeout: '20000'
  displayName: 'FASE DE DESPLIEGUE A SERVIDOR DE PRUEBAS - Copiar paquete al servidor de prueba'